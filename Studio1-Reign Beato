PRAGMA foreign_keys = ON;
 
.mode columns
.headers on
 
create table student(
    student_ID text primary key not null,
    student_Name text not null
);
 
insert into student(student_ID, student_Name)  
values ('S1001', 'Kiran');
insert into student(student_ID, student_Name)  
values ('S1002', 'Reign');
insert into student(student_ID, student_Name)  
values ('S1003', 'Ankush');
insert into student(student_ID, student_Name)  
values ('S1004', 'Arya');
insert into student(student_ID, student_Name)  
values ('S1005', 'Sujal');
insert into student(student_ID, student_Name)  
values ('S1006', 'Dev');
insert into student(student_ID, student_Name)  
values ('S1007', 'Heli');
insert into student(student_ID, student_Name)  
values ('S1008', 'Prabh');
 
// to check: select * from student;
 
create table service_provider(
    sp_ID text primary key not null,
    sp_Name text not null,
    sp_Type text not null
);
 
insert into service_provider(sp_ID, sp_Name, sp_Type)
values ('P2001', 'Sam', 'Tutor');
insert into service_provider(sp_ID, sp_Name, sp_Type)
values ('P2002', 'John', 'Tutor');
insert into service_provider(sp_ID, sp_Name, sp_Type)
values ('P2003', 'Nicole', 'Mentor');
insert into service_provider(sp_ID, sp_Name, sp_Type)
values ('P2004', 'Veronica', 'Mentor');
insert into service_provider(sp_ID, sp_Name, sp_Type)
values ('P2005', 'Sam', 'Tutor');
 
// to check: select * from service_provider;
 
create table availability(
    avail_ID text primary key not null,
    avail_Start time,
    avail_End time,
    avail_Day text,
    location text,
    sp_ID integer,
    foreign key (sp_ID) references service_provider(sp_ID)
);
 
insert into availability(avail_ID, avail_Start, avail_End, avail_Day, location, sp_ID)
values ('AV1', '10:00', '11:00', 'Monday', 'Room 201', 'P2001');
insert into availability(avail_ID, avail_Start, avail_End, avail_Day, location, sp_ID)
values ('AV2', '12:00', '14:00', 'Monday', 'Room 204', 'P2002');
insert into availability(avail_ID, avail_Start, avail_End, avail_Day, location, sp_ID)
values ('AV3', '9:00', '11:00', 'Tuesday', 'Room 207', 'P2003');
insert into availability(avail_ID, avail_Start, avail_End, avail_Day, location, sp_ID)
values ('AV4', '12:00', '14:00', 'Tuesday', 'Room 309', 'P2004');
insert into availability(avail_ID, avail_Start, avail_End, avail_Day, location, sp_ID)
values ('AV5', '10:30', '11:30', 'Wednseday', 'Room 301', 'P2005');
insert into availability(avail_ID, avail_Start, avail_End, avail_Day, location, sp_ID)
values ('AV6', '11:00', '13:00', 'Wednesday', 'Room 402', 'P2001');
insert into availability(avail_ID, avail_Start, avail_End, avail_Day, location, sp_ID)
values ('AV7', '11:30', '13:00', 'Thursday', 'Room 503', 'P2002');
insert into availability(avail_ID, avail_Start, avail_End, avail_Day, location, sp_ID)
values ('AV8', '14:00', '15:30', 'Thursday', 'Room 602', 'P2003');
insert into availability(avail_ID, avail_Start, avail_End, avail_Day, location, sp_ID)
values ('AV9', '11:30', '12:00', 'Friday', 'Room 704', 'P2004');
insert into availability(avail_ID, avail_Start, avail_End, avail_Day, location, sp_ID)
values ('AV10', '14:30', '16:30', 'Friday', 'Room 702', 'P2005');
 
// to check: select * from availability;
 
create table course(
    course_ID text primary key not null,
    course_Name text not null,
    sp_ID text not null,
    foreign key (sp_ID) references service_provider(sp_ID)
);
 
insert into course(course_ID, course_Name, sp_ID)
values ('IT1O1', 'Information Technology', 'P2001');
insert into course(course_ID, course_Name, sp_ID)
values ('AM111', 'Applied Management', 'P2002');
insert into course(course_ID, course_Name, sp_ID)
values ('ENG201', 'English', 'P2003');
insert into course(course_ID, course_Name, sp_ID)
values ('CON567', 'Construction', 'P2004');
insert into course(course_ID, course_Name, sp_ID)
values ('IT1O1', 'Information Technology', 'P2005');
insert into course(course_ID, course_Name, sp_ID)
values ('AM111', 'Applied Management', 'P2001');
insert into course(course_ID, course_Name, sp_ID)
values ('ENG201', 'English', 'P2002');
insert into course(course_ID, course_Name, sp_ID)
values ('CON567', 'Construction', 'P2003');
insert into course(course_ID, course_Name, sp_ID)
values ('IT1O1', 'Information Technology', 'P2004');
insert into course(course_ID, course_Name, sp_ID)
values ('AM111', 'Applied Management', 'P2005');
 
-- to check: select * from course;
 
create table block(
    block_ID text primary key not null,
    block_Year integer not null,
    block_Number integer not null,
    block_Start date not null,
    block_End date not null
);
 
insert into block(block_ID, block_Year, block_Number, block_Start, block_End)
values ('2024-B1', 2024, 1, '2024-02-10', '2024-04-10');
insert into block(block_ID, block_Year, block_Number, block_Start, block_End)
values ('2024-B2', 2024, 2, '2024-04-10', '2024-06-10');
insert into block(block_ID, block_Year, block_Number, block_Start, block_End)
values ('2024-B3', 2024, 3, '2024-06-10', '2024-08-10');
insert into block(block_ID, block_Year, block_Number, block_Start, block_End)
values ('2024-B4', 2024, 4, '2024-08-10', '2024-10-10');
insert into block(block_ID, block_Year, block_Number, block_Start, block_End)
values ('2025-B1', 2025, 1, '2025-02-10', '2025-02-10');
insert into block(block_ID, block_Year, block_Number, block_Start, block_End)
values ('2025-B2', 2025, 2, '2025-02-10', '2025-04-10');
insert into block(block_ID, block_Year, block_Number, block_Start, block_End)
values ('2025-B3', 2025, 3, '2025-04-10', '2025-06-10');
insert into block(block_ID, block_Year, block_Number, block_Start, block_End)
values ('2025-B4', 2025, 4, '2025-06-10', '2025-08-10');
 
// to check: select * from block;
 
create table blockCourse(
    blockCourse_ID text primary key not null,
    course_ID text not null,
    block_ID text not null,
    foreign key (course_ID) references course(course_ID),
    foreign key (block_ID) references block(block_ID)
);
 
insert into blockCourse(blockCourse_ID, course_ID, block_ID)
values ('IT24-B1', 'IT1O1', '2024-B1');
insert into blockCourse(blockCourse_ID, course_ID, block_ID)
values ('AM24-B2', 'AM111', '2024-B2');
insert into blockCourse(blockCourse_ID, course_ID, block_ID)
values ('ENG24-B3', 'ENG201', '2024-B3');
insert into blockCourse(blockCourse_ID, course_ID, block_ID)
values ('CON24-B4', 'CON567', '2024-B4');
insert into blockCourse(blockCourse_ID, course_ID, block_ID)
values ('IT25-B1', 'IT1O1', '2025-B1');
insert into blockCourse(blockCourse_ID, course_ID, block_ID)
values ('AM25-B2', 'AM111', '2025-B2');
insert into blockCourse(blockCourse_ID, course_ID, block_ID)
values ('ENG25-B3', 'ENG201', '2025-B3');
insert into blockCourse(blockCourse_ID, course_ID, block_ID)
values ('CON25-B4', 'CON567', '2025-B4');
 
// to check: select * from blockCourse;
 
create table enrolment(
    enrol_ID text primary key not null,
    student_ID text not null,
    course_ID text not null,
    foreign key (student_ID) references student(student_ID),
    foreign key (course_ID) references course(course_ID)
);
 
insert into enrolment(enrol_ID, student_ID, course_ID)
values ('Y2401', 'S1001', 'IT101');
insert into enrolment(enrol_ID, student_ID, course_ID)
values ('Y2402', 'S1002', 'AM111');
insert into enrolment(enrol_ID, student_ID, course_ID)
values ('Y2403', 'S1003', 'ENG201');
insert into enrolment(enrol_ID, student_ID, course_ID)
values ('Y2404', 'S100', 'CON567');
insert into enrolment(enrol_ID, student_ID, course_ID)
values ('Y2501', 'S1005', 'AM111');
insert into enrolment(enrol_ID, student_ID, course_ID)
values ('Y2502', 'S1006', 'ENG201');
insert into enrolment(enrol_ID, student_ID, course_ID)
values ('Y2503', 'S1007', 'CON567');
insert into enrolment(enrol_ID, student_ID, course_ID)
values ('Y2504', 'S1008', 'EN201');
 
// to check: select * from enrolment;
 
create table appointment(
    appt_ID text primary key not null,
    appt_Date date not null,
    appt_Start time not null,
    appt_End time not null,
    student_ID text not null,
    sp_ID text not null,
    foreign key (student_ID) references student(student_ID),
    foreign key (sp_ID) references service_provider(sp_ID)
);
 
insert into appointment(appt_ID, appt_Date, appt_Start, appt_End, student_ID, sp_ID)
values ('APPT1', '2025-02-10', '10:00', '11:00', 'S1001', 'P2001');
insert into appointment(appt_ID, appt_Date, appt_Start, appt_End, student_ID, sp_ID)
values ('APPT2', '2025-02-11', '9:00', '11:00', 'S1002', 'P2002');
insert into appointment(appt_ID, appt_Date, appt_Start, appt_End, student_ID, sp_ID)
values ('APPT3', '2025-02-10', '12:00', '14:00', 'S1003', 'P2007');
insert into appointment(appt_ID, appt_Date, appt_Start, appt_End, student_ID, sp_ID)
values ('APPT4', '2025-02-11', '12:00', '14:00', 'S1004', 'P2008');
insert into appointment(appt_ID, appt_Date, appt_Start, appt_End, student_ID, sp_ID)
values ('APPT5', '2025-02-12', '10:30', '11:30', 'S1005', 'P2001');
insert into appointment(appt_ID, appt_Date, appt_Start, appt_End, student_ID, sp_ID)
values ('APPT6', '2025-02-13', '11:30', '13:00', 'S1006', 'P2002');
insert into appointment(appt_ID, appt_Date, appt_Start, appt_End, student_ID, sp_ID)
values ('APPT7', '2025-02-12', '11:00', '13:00', 'S1007', 'P2007');
insert into appointment(appt_ID, appt_Date, appt_Start, appt_End, student_ID, sp_ID)
values ('APPT8', '2025-02-13', '14:00', '15:30', 'S1008', 'P2008');
insert into appointment(appt_ID, appt_Date, appt_Start, appt_End, student_ID, sp_ID)
values ('APPT9', '2025-02-14', '11:30', '12:00', 'S1003', 'P2001');
insert into appointment(appt_ID, appt_Date, appt_Start, appt_End, student_ID, sp_ID)
values ('APPT10', '2025-02-14', '14:30', '16:30', 'S1005', 'P2002');
 
// to check: select * from appointment;
